#!/usr/bin/env ruby
# frozen_string_literal: true

require 'openai'
require 'jumon'
require 'cli/ui'

prompts_path = ARGV[0]

case prompts_path
when nil, "-h", "--help"
  $stderr.puts "USAGE: jumon <path>"
  exit 1
end

unless File.exist?(prompts_path)
  $stderr.puts "ERROR: file #{prompts_path} does not exist!"
  exit 1
end

yaml = YAML.load_file(prompts_path, symbolize_names: true)

prompt = Jumon::Prompt.new(yaml)
config = Jumon::Configuration.new(yaml)

system_subject = Jumon::Subject.new(prompt.system)
system_subject.set_subjects

user_subject = Jumon::Subject.new(prompt.user)
user_subject.set_subjects

client = OpenAI::Client.new(access_token: ENV['OPENAI_API_KEY'])

results = {
  model: config.model,
  temperature: config.temperature,
  results: []
}

puts "Running #{system_subject.subjects.count * user_subject.subjects.count} tests..."

system_subject.subjects.each do |s|
  user_subject.subjects.each do |u|
    res = client.chat(
      parameters: {
        model: config.model,
        temperature: config.temperature,
        messages: [
          {
            role: 'system',
            content: s
          },
          {
            role: 'user',
            content: u
          }
        ]
      }
    )

    results[:results] << {
      system: s,
      user: u,
      assistant: res['choices'] ? res['choices'][0]['message']['content'] : 'ERROR'
    }
  end
end

puts results.to_yaml
